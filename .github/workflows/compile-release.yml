name: Build Release
on: [push]
env:
  CARGO_TERM_COLOR: always
jobs:
  build_64:
    runs-on: ubuntu-latest
    name: Build Linux Releases (X86_64)
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: 'x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl'
      - name: Install Dependencies
        run: sudo apt-get install musl-tools build-essential clang-11 php8.0-dev
      - name: Build Extension (Linux GNU)
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-unknown-linux-gnu
          use-cross: false
      - name: Build Extension (Alpine musl)
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-unknown-linux-musl
          use-cross: false
      - uses: actions/upload-artifact@v3
        with:
          name: GNU Linux (x86_64)
          path: target/x86_64-unknown-linux-gnu/release/libphp_scrypt.so
      - uses: actions/upload-artifact@v3
        with:
          name: Alpine Linux (x86_64)
          path: target/x86_64-unknown-linux-musl/release/libphp_scrypt.so
  build_aarch64:
    runs-on: ubuntu-latest
    name: Build Linux Releases (AARCH64)
    steps:
      - uses: actions/checkout@v2
      - name: Install QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: aarch64
      - name: Run Docker on tmpfs
        uses: JonasAlfredsson/docker-on-tmpfs@v1
        with:
          tmpfs_size: 5
          swap_size: 4
          swap_location: '/mnt/swapfile'
      - name: Build Docker Image
        run: docker build --platform=linux/aarch64 -t buildimage .
      - name: Create docker container
        run: docker create -t -i -v "$(pwd):/app" --platform=linux/aarch64 --name=buildcontainer buildimage tail -f /dev/null
      - name: Bring up docker container
        run: docker start buildcontainer
      - name: Install Dependencies
        run: docker exec buildcontainer apt-get install musl-tools musl-dev build-essential clang-11 php8.1-dev
      - name: Build Extension (Linux GNU && Musl)
        run: docker exec buildcontainer sh -c "cd /app && /scripts/build.sh"
      - uses: actions/upload-artifact@v3
        with:
          name: GNU Linux (aarch64)
          path: target/aarch64-unknown-linux-gnu/release/libphp_scrypt.so
      - uses: actions/upload-artifact@v3
        with:
          name: Alpine Linux (aarch64)
          path: target/aarch64-unknown-linux-musl/release/libphp_scrypt.so